gitops-runtime:
  global:
    codefresh:
      accountId: 65a913bcf04bd9d21f42662d
      userToken:
        secretKeyRef:
          name: codefresh-user-token
          key: token
    runtime:
      name: codefresh
      # Default logging options used by all components
    logging:
      # -- Set the global logging format. Either: `text` or `json`
      format: text
      # -- Set the global logging level. One of: `debug`, `info`, `warn` or `error`
      level: debug
  argo-cd:
    notifications:
      enabled: true
  
      bots:
        slack: {}
  
      notifiers:
        service.slack: |
          token: $slack-token
  
      subscriptions:
        - triggers:
            - cf-promotion-on-deployed-trigger
          recipients:
            - cf-promotion-app-revision-changed-notifier
        - triggers:
            - cf-promotion-on-out-of-sync-trigger
          recipients:
            - cf-promotion-app-revision-changed-notifier
  
      templates:
        template.app-deployed: |
          message: "Author: {{(call .repo.GetCommitMetadata .app.status.sync.revision).Author}}"
          slack:
            attachments: |
              [{
                "title": "{{ .app.metadata.name}}",
                "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "color": "#E96D76",
                "fields": [
                {
                  "title": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                },
                {
                  "title": "Repository",
                  "value": "{{.app.spec.source.repoURL}}",
                  "short": true
                }
                {{range $index, $c := .app.status.history}}
                {{if not $index}},{{end}}
                {{if $index}},{{end}}
                {
                  "title": "{{$c.revision}}",
                  "value": "{{$c.revision}}",
                  "short": true
                }
                {{end}}
                ]
              }]
            deliveryPolicy: Post
            groupingKey: ""
            notifyBroadcast: false
  
      triggers:
        trigger.on-deployed: |
          - description: Application is synced and healthy. Triggered once per commit.
            when: app.status.health.status == 'Healthy' and app.status.operationState != nil and app.status.operationState.phase in ['Succeeded']
            oncePer: app.status.operationState.syncResult.revision
            send:
            - app-deployed
    controller:
      replicas: 0
      image:
        tag: v2.10-2024.4.21-78528ac3f
        # tag: v2.8-2024.02.13-ee378953a
    server:
      image:
        tag: v2.10-2024.4.21-78528ac3f
        # tag: v2.8-2024.02.13-ee378953a
      service:
        type: LoadBalancer
    repoServer:
      image:
        tag: v2.10-2024.4.21-78528ac3f
        # tag: v2.8-2024.02.13-ee378953a
    configs:
      cm:
          timeout.reconciliation: 0s
          accounts.pasha: apiKey, login
          accounts.pasha.enabled: "true"
    #   params:
    #     application.namespaces: "cf-test"
    #   rbac:
    #     policy.csv: |
    #       p, michael, applications, *, demo/*, allow
    #       p, michael, applications, sync, dev/*, allow
    #       p, michael, applications, get, dev/*, allow
